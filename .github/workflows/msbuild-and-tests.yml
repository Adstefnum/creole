name: MSBuild and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./creole.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Set up SFML
      run: |
            echo "##[group]Set up SFML##"
            curl -o SFML-2.5.1-windows-vc15-64-bit.zip https://www.sfml-dev.org/files/SFML-2.5.1-windows-vc15-64-bit.zip
            mkdir Dependencies
            cd Dependencies
            powershell Expand-Archive ../SFML-2.5.1-windows-vc15-64-bit.zip
            cd ..
            set SFML_ROOT=%CD%\Dependencies\SFML-2.5.1
            set SFML_INCLUDE_DIR=%CD%\Dependencies\SFML-2.5.1\include
            echo "##[endgroup]"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:IncludePath=${{env.SFML_INCLUDE_DIR}} /p:SFML_ROOT=${{env.SFML_ROOT}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Setup VSTest and add to PATH
      uses: darenm/Setup-VSTest@v1
      id: setup_vstest

    - name: Run VSTest
      id: run_vstest
      working-directory: ./x64/Debug/
      run: vstest.console.exe /Platform:x64 .\Tests.dll
